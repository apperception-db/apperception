name: Test
on:
  push:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      mobilitydb:
        image: mobilitydb/mobilitydb:14-3.2-1
        ports:
          - 25440:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mobilitydb-road-1:
        image: mobilitydb/mobilitydb:14-3.2-1
        ports:
          - 25441:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mobilitydb-road-2:
        image: mobilitydb/mobilitydb:14-3.2-1
        ports:
          - 25442:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mobilitydb-reset:
        image: mobilitydb/mobilitydb:14-3.2-1
        ports:
          - 25443:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mobilitydb-import:
        image: mobilitydb/mobilitydb:14-3.2-1
        ports:
          - 25444:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mobilitydb-sql:
        image: mobilitydb/mobilitydb:14-3.2-1
        ports:
          - 25445:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT || github.token }}
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.6"
      
      - name: Install lap (Hack)
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install numpy
          # python3 -m pip install lap
          git clone https://github.com/gatagat/lap.git
          pushd lap
            python3 setup.py build
            python3 setup.py install
          popd

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # - name: Cache Poetry virtualenv
      #   uses: actions/cache@v3
      #   id: cached-poetry-dependencies 
      #   with:
      #     path: .venv
      #     key: poetry-venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Dependencies
        # if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --without dev --with test

      - name: Check Python Version
        run: poetry run python --version
      
      - name: Check Installed Packages
        run: poetry run pip list

      - name: Extend MobilityDB with User-Defined functions
        run: |
          pushd pg_extender
          poetry run python ./scripts/generate_pg_extender.py
          cat install.sql
          psql -h localhost -p 25440 -d mobilitydb -U docker -c "SET client_min_messages TO WARNING;" -c "\i install.sql;"
          psql -h localhost -p 25441 -d mobilitydb -U docker -c "SET client_min_messages TO WARNING;" -c "\i install.sql;"
          psql -h localhost -p 25442 -d mobilitydb -U docker -c "SET client_min_messages TO WARNING;" -c "\i install.sql;"
          psql -h localhost -p 25443 -d mobilitydb -U docker -c "SET client_min_messages TO WARNING;" -c "\i install.sql;"
          psql -h localhost -p 25444 -d mobilitydb -U docker -c "SET client_min_messages TO WARNING;" -c "\i install.sql;"
          popd
        env:
          PGPASSWORD: docker
      
      - name: Ingest data
        run: |
          poetry run python ./scripts/ingest_road.py
          poetry run python ./scripts/import_tables.py
          poetry run jupyter nbconvert --execute --to notebook ./scripts/optimized-scenic/add_attributes.ipynb
        env:
          AP_PORT: 25440
      
      - name: Generate Image data
        run: |
          poetry run python scripts/fake-images.py
      
      - name: Unit Test
        run: poetry run pytest --cov=apperception --cov-report=xml tests
        env:
          AP_PORT: 25440
          AP_PORT_ROAD_1: 25441
          AP_PORT_ROAD_2: 25442
          AP_PORT_RESET: 25443
          AP_PORT_IMPORT: 25444
          AP_PORT_SQL: 25445
      
      - name: Upload coverage reports to Codecov
        run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -t ${{ secrets.CODECOV_TOKEN }}
