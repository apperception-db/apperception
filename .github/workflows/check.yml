name: Type Check
on:
  push:

jobs:
  check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT || github.token }}

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.12'

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # - name: Cache Poetry virtualenv
      #   uses: actions/cache@v3
      #   id: cached-poetry-dependencies 
      #   with:
      #     path: .venv
      #     key: poetry-venv-${{ runner.os }}-py3.10-${{ hashFiles('**/poetry.lock') }}

      - name: Install Dependencies
        # if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction
      
      - name: Check Python Version
        run: poetry run python --version
      
      - name: Check Installed Packages
        run: poetry run pip list
      
      # - name: Type Check with mypy
      #   if: always()
      #   run: |
      #     poetry run mypy spatialyze || true
      #     poetry run mypy --install-types --non-interactive spatialyze || true
      #     poetry run mypy spatialyze
      
      - name: Type Check with pyright
        if: always()
        run: poetry run pyright spatialyze
        env:
          PYRIGHT_PYTHON_FORCE_VERSION: latest